version: "3.9"
networks:
  default:
    name: infra-network
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    # Enables the web UI and tells Traefik to listen to docker
    command: 
    - --api.insecure=true 
    - --providers.docker
    - --entrypoints.web.address=:80

    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  static:
    build: ./Static server
    deploy:
      replicas: 1
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.static.rule=Host(`localhost`)"
      # Enabling the sticky sessions with cookies
      - "traefik.http.services.static.loadbalancer.sticky.cookie=true"
      - "traefik.http.services.static.loadbalancer.sticky.cookie.name=stickyCookie"
  express:
    build: ./Express server
    deploy:
      replicas: 1
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.express.rule=Host(`localhost`)"
      - "traefik.http.services.express.loadbalancer.server.port=3000"
      - "traefik.http.routers.express.rule=PathPrefix(`/api`)"
      #Strip the /api to make the request call the "/" route of our dynamic server
      - "traefik.http.middlewares.express-strip.stripprefix.prefixes=/api"
      #Link the stripping middleware to the router
      - "traefik.http.routers.express.middlewares=express-strip"
  yadmgui:
    build: ./yadmgui
    labels:
      - "traefik.http.routers.yadmgui.rule=Host(`manage.localhost`)"
      - "traefik.http.services.yadmgui.loadbalancer.server.port=5000"
      - "traefik.http.routers.yadmgui.entrypoints=web"
      

    volumes:
        - /var/run/docker.sock:/var/run/docker.sock


      